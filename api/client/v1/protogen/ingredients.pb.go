// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ingredients.proto

package protogen

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IngredientRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IngredientRequest) Reset()         { *m = IngredientRequest{} }
func (m *IngredientRequest) String() string { return proto.CompactTextString(m) }
func (*IngredientRequest) ProtoMessage()    {}
func (*IngredientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0094c2e94e709de6, []int{0}
}

func (m *IngredientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngredientRequest.Unmarshal(m, b)
}
func (m *IngredientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngredientRequest.Marshal(b, m, deterministic)
}
func (m *IngredientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngredientRequest.Merge(m, src)
}
func (m *IngredientRequest) XXX_Size() int {
	return xxx_messageInfo_IngredientRequest.Size(m)
}
func (m *IngredientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IngredientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IngredientRequest proto.InternalMessageInfo

func (m *IngredientRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type IngredientResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameEn               string   `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`
	Info                 string   `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Icon                 string   `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IngredientResponse) Reset()         { *m = IngredientResponse{} }
func (m *IngredientResponse) String() string { return proto.CompactTextString(m) }
func (*IngredientResponse) ProtoMessage()    {}
func (*IngredientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0094c2e94e709de6, []int{1}
}

func (m *IngredientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngredientResponse.Unmarshal(m, b)
}
func (m *IngredientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngredientResponse.Marshal(b, m, deterministic)
}
func (m *IngredientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngredientResponse.Merge(m, src)
}
func (m *IngredientResponse) XXX_Size() int {
	return xxx_messageInfo_IngredientResponse.Size(m)
}
func (m *IngredientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IngredientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IngredientResponse proto.InternalMessageInfo

func (m *IngredientResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IngredientResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IngredientResponse) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *IngredientResponse) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *IngredientResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *IngredientResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func init() {
	proto.RegisterType((*IngredientRequest)(nil), "proto.IngredientRequest")
	proto.RegisterType((*IngredientResponse)(nil), "proto.IngredientResponse")
}

func init() { proto.RegisterFile("ingredients.proto", fileDescriptor_0094c2e94e709de6) }

var fileDescriptor_0094c2e94e709de6 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x71, 0x68, 0x52, 0x71, 0x95, 0x2a, 0x72, 0x0b, 0x86, 0x29, 0x0a, 0x4b, 0x17, 0x3c,
	0xc0, 0xc8, 0x16, 0x09, 0xa1, 0x32, 0x55, 0xd9, 0x60, 0x41, 0x34, 0x3e, 0x90, 0x07, 0xce, 0xc1,
	0x76, 0x85, 0xf8, 0x2d, 0xfc, 0x59, 0x64, 0x1b, 0xd1, 0x08, 0x98, 0xde, 0xf9, 0xbd, 0xef, 0xe4,
	0x7b, 0x50, 0x1b, 0x7e, 0x71, 0xa4, 0x0d, 0x71, 0xf0, 0x6a, 0x74, 0x36, 0x58, 0x2c, 0x93, 0xb4,
	0xe7, 0x50, 0xaf, 0x7f, 0xb2, 0x9e, 0xde, 0x76, 0xe4, 0x03, 0x2e, 0xa1, 0x30, 0x5a, 0x8a, 0x46,
	0xac, 0xca, 0xbe, 0x30, 0xba, 0xfd, 0x14, 0x80, 0x53, 0xca, 0x8f, 0x96, 0x3d, 0xfd, 0xc6, 0x10,
	0x61, 0xc6, 0x4f, 0xaf, 0x24, 0x8b, 0x46, 0xac, 0x8e, 0xfa, 0x34, 0xe3, 0x09, 0xcc, 0xa3, 0x3e,
	0x12, 0xcb, 0xc3, 0x64, 0x57, 0xf1, 0x79, 0xc3, 0x11, 0x36, 0xfc, 0x6c, 0xe5, 0x2c, 0xc3, 0x71,
	0xc6, 0x06, 0x16, 0x9a, 0xfc, 0xe0, 0xcc, 0x18, 0x8c, 0x65, 0x59, 0xa6, 0x68, 0x6a, 0xa5, 0xad,
	0xc1, 0xb2, 0xac, 0xbe, 0xb7, 0x06, 0xcb, 0x97, 0xf7, 0xb0, 0xd8, 0x1f, 0xe7, 0xf1, 0x0e, 0xea,
	0x5b, 0x0a, 0x7b, 0xa7, 0xfb, 0x58, 0x6b, 0x94, 0xb9, 0xb5, 0xfa, 0xd3, 0xf5, 0xec, 0xf4, 0x9f,
	0x24, 0xf7, 0x6b, 0x0f, 0xba, 0x0b, 0x58, 0xba, 0x9d, 0x7a, 0xa7, 0x2d, 0xb9, 0x8c, 0x75, 0xc7,
	0x93, 0xaf, 0x36, 0xd1, 0xd9, 0x88, 0x87, 0xb9, 0xba, 0x4e, 0xe1, 0xb6, 0x4a, 0x72, 0xf5, 0x15,
	0x00, 0x00, 0xff, 0xff, 0xad, 0xc3, 0x34, 0x3b, 0x6f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IngredientsClient is the client API for Ingredients service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IngredientsClient interface {
	GetIngredientById(ctx context.Context, in *IngredientRequest, opts ...grpc.CallOption) (*IngredientResponse, error)
}

type ingredientsClient struct {
	cc grpc.ClientConnInterface
}

func NewIngredientsClient(cc grpc.ClientConnInterface) IngredientsClient {
	return &ingredientsClient{cc}
}

func (c *ingredientsClient) GetIngredientById(ctx context.Context, in *IngredientRequest, opts ...grpc.CallOption) (*IngredientResponse, error) {
	out := new(IngredientResponse)
	err := c.cc.Invoke(ctx, "/proto.Ingredients/GetIngredientById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IngredientsServer is the server API for Ingredients service.
type IngredientsServer interface {
	GetIngredientById(context.Context, *IngredientRequest) (*IngredientResponse, error)
}

// UnimplementedIngredientsServer can be embedded to have forward compatible implementations.
type UnimplementedIngredientsServer struct {
}

func (*UnimplementedIngredientsServer) GetIngredientById(ctx context.Context, req *IngredientRequest) (*IngredientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIngredientById not implemented")
}

func RegisterIngredientsServer(s *grpc.Server, srv IngredientsServer) {
	s.RegisterService(&_Ingredients_serviceDesc, srv)
}

func _Ingredients_GetIngredientById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IngredientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngredientsServer).GetIngredientById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Ingredients/GetIngredientById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngredientsServer).GetIngredientById(ctx, req.(*IngredientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ingredients_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Ingredients",
	HandlerType: (*IngredientsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetIngredientById",
			Handler:    _Ingredients_GetIngredientById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ingredients.proto",
}
